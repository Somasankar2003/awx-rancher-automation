---
- name: Create multiple VMs on OpenStack and auto-register to Rancher
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    # Rancher details
    rancher_url: "https://192.168.170.67"
    rancher_token: "token-kdlpz:c4pkgsl5pk5rm6rxtz5jr5frjhl9p427b76q2dm7pdnpsbnfwml9qf"
    cluster_name: "openstack-cluster"

    # Surveyed variables from AWX or CLI
    vm_count: "{{ vm_count | int }}"
    vm_net: "{{ vm_net }}"
    vm_flavor: "{{ vm_flavor }}"

    # Static VM details
    vm_image: "7e19db1a-48d4-4418-b5e2-d2a5dc611a69"
    vm_keypair: "rke"

    # OpenStack authentication
    os_auth_url: "http://192.168.150.31:5000/v3"
    os_project_name: "XAS"
    os_project_domain: "Default"
    os_username: "admin"
    os_user_domain: "Default"
    os_password: "2rlpcV3k3OPv"
    os_region_name: "RegionOne"

  tasks:
    - name: Validate vm_count is a positive integer
      fail:
        msg: "vm_count must be a positive integer. Got {{ vm_count }}."
      when: vm_count < 1

    - name: Generate VM list
      set_fact:
        vm_list: "{{ query('sequence', 'start=1 end=' + vm_count|string) }}"

    - name: Get cluster ID from Rancher
      uri:
        url: "{{ rancher_url }}/v3/clusters?name={{ cluster_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ rancher_token }}"
          Content-Type: "application/json"
        validate_certs: no
      register: cluster_info

    - name: Extract cluster ID
      set_fact:
        cluster_id: "{{ cluster_info.json.data[0].id }}"

    - name: Get registration token from Rancher
      uri:
        url: "{{ rancher_url }}/v3/clusterregistrationtokens?clusterId={{ cluster_id }}"
        method: GET
        headers:
          Authorization: "Bearer {{ rancher_token }}"
          Content-Type: "application/json"
        validate_certs: no
      register: reg_info

    - name: Set registration command
      set_fact:
        registration_command: "{{ reg_info.json.data[0].insecureNodeCommand }} --etcd --controlplane --worker --label 'cattle.io/os=linux'"

    - name: Create cloud-init user_data files
      copy:
        dest: "/tmp/cloud-init-rancher-node-{{ item }}.yml"
        content: |
          #cloud-config
          package_update: true
          packages:
            - curl
          runcmd:
            - curl -fsSL https://get.docker.com | sh
            - usermod -aG docker ubuntu || true
            - sleep 15
            - {{ registration_command }}
      loop: "{{ vm_list }}"
      loop_control:
        label: "rancher-node-{{ item }}"

    - name: Create VMs on OpenStack with cloud-init
      os_server:
        state: present
        name: "rancher-node-{{ item }}"
        image: "{{ vm_image }}"
        flavor: "{{ vm_flavor }}"
        key_name: "{{ vm_keypair }}"
        nics:
          - net-id: "{{ vm_net }}"
        userdata: "{{ lookup('file', '/tmp/cloud-init-rancher-node-' + item|string + '.yml') }}"
        auto_ip: yes
        cloud:
          auth:
            auth_url: "{{ os_auth_url }}"
            project_name: "{{ os_project_name }}"
            project_domain_name: "{{ os_project_domain }}"
            username: "{{ os_username }}"
            user_domain_name: "{{ os_user_domain }}"
            password: "{{ os_password }}"
          region_name: "{{ os_region_name }}"
      register: new_vms
      loop: "{{ vm_list }}"
      loop_control:
        label: "rancher-node-{{ item }}"

    - name: Show created VM details
      debug:
        msg: "VM rancher-node-{{ item }} created with IP {{ new_vms.results[item | int - 1].server.public_v4 | default(new_vms.results[item | int - 1].server.private_v4) | default('No IP assigned') }}"
      loop: "{{ vm_list }}"
      loop_control:
        label: "rancher-node-{{ item }}"
