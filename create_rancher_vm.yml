---
- name: Create multiple VMs on OpenStack and auto-register to Rancher
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    # Rancher details
    rancher_url: "https://192.168.170.67"
    rancher_token: "token-kdlpz:c4pkgsl5pk5rm6rxtz5jr5frjhl9p427b76q2dm7pdnpsbnfwml9qf"
    cluster_name: "openstack-cluster"

    # Static OpenStack and VM details - replace with your defaults or pass as vars
    vm_image: "7e19db1a-48d4-4418-b5e2-d2a5dc611a69"
    vm_keypair: "rke"
    os_auth_url: "http://192.168.150.31:5000/v3"
    os_project_name: "XAS"
    os_project_domain: "Default"
    os_username: "admin"
    os_user_domain: "Default"
    os_password: "2rlpcV3k3OPv"
    os_region_name: "RegionOne"

  tasks:
    - name: Validate vm_count is defined and positive integer
      fail:
        msg: "vm_count variable is required and must be a positive integer"
      when: vm_count is not defined or (vm_count | int) < 1

    - name: Generate VM list from vm_count
      set_fact:
        vm_list: "{{ query('sequence', 'start=1 end=' + (vm_count | int | string)) }}"

    - name: Get cluster ID from Rancher
      uri:
        url: "{{ rancher_url }}/v3/clusters?name={{ cluster_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ rancher_token }}"
          Content-Type: "application/json"
        validate_certs: no
      register: cluster_info

    - name: Extract cluster ID
      set_fact:
        cluster_id: "{{ cluster_info.json.data[0].id }}"

    - name: Get registration token from Rancher
      uri:
        url: "{{ rancher_url }}/v3/clusterregistrationtokens?clusterId={{ cluster_id }}"
        method: GET
        headers:
          Authorization: "Bearer {{ rancher_token }}"
          Content-Type: "application/json"
        validate_certs: no
      register: reg_info

    - name: Set registration command
      set_fact:
        registration_command: "{{ reg_info.json.data[0].insecureNodeCommand }} --etcd --controlplane --worker --label 'cattle.io/os=linux'"

    - name: Create multiple VMs
      loop: "{{ vm_list }}"
      vars:
        vm_name: "rancher-node-{{ item }}"
        cloud_init_path: "/tmp/cloud-init-{{ vm_name }}.yml"
      block:
        - name: Create cloud-init user_data for {{ vm_name }}
          copy:
            dest: "{{ cloud_init_path }}"
            content: |
              #cloud-config
              package_update: true
              packages:
                - curl
              runcmd:
                - curl -fsSL https://get.docker.com | sh
                - usermod -aG docker ubuntu
                - {{ registration_command }}

        - name: Create VM {{ vm_name }} on OpenStack
          os_server:
            state: present
            name: "{{ vm_name }}"
            image: "{{ vm_image }}"
            flavor: "{{ vm_flavor }}"
            key_name: "{{ vm_keypair }}"
            nics:
              - net-id: "{{ vm_net }}"
            userdata: "{{ lookup('file', cloud_init_path) }}"
            auto_ip: yes
            cloud:
              auth:
                auth_url: "{{ os_auth_url }}"
                project_name: "{{ os_project_name }}"
                project_domain_name: "{{ os_project_domain }}"
                username: "{{ os_username }}"
                user_domain_name: "{{ os_user_domain }}"
                password: "{{ os_password }}"
              region_name: "{{ os_region_name }}"
          register: new_vm

        - name: Show created VM details
          debug:
            msg: "VM {{ vm_name }} created with IP {{ new_vm.server.public_v4 | default(new_vm.server.private_v4) | default('No IP assigned') }}"
