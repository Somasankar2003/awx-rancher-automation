- name: Get Rancher cluster registration command with node roles
  hosts: localhost
  gather_facts: false
  vars:
    rancher_url: "https://192.168.170.67"
    api_token: "token-kdlpz:c4pkgsl5pk5rm6rxtz5jr5frjhl9p427b76q2dm7pdnpsbnfwml9qf"
    cluster_name: "custom-cluster"

  tasks:
    - name: Fetch cluster details
      uri:
        url: "{{ rancher_url }}/v3/clusters?name={{ cluster_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ api_token }}"
          Content-Type: "application/json"
        validate_certs: false
      register: cluster_list_response

    - name: Fail if cluster not found
      fail:
        msg: "Cluster named {{ cluster_name }} not found!"
      when: cluster_list_response.json.data | length == 0

    - name: Set cluster ID
      set_fact:
        cluster_id: "{{ cluster_list_response.json.data[0].id }}"

    - name: Create new registration token with node roles
      uri:
        url: "{{ rancher_url }}/v3/clusterRegistrationTokens"
        method: POST
        headers:
          Authorization: "Bearer {{ api_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          clusterId: "{{ cluster_id }}"
          # Specify node roles in the token creation
          nodeCommand: true
        validate_certs: false
        status_code: 201
      register: token_response

    - name: Wait for token to be ready
      uri:
        url: "{{ rancher_url }}/v3/clusterRegistrationTokens/{{ token_response.json.id }}"
        method: GET
        headers:
          Authorization: "Bearer {{ api_token }}"
          Content-Type: "application/json"
        validate_certs: false
        status_code: 200
      register: final_token
      until: final_token.json.insecureNodeCommand is defined
      retries: 15
      delay: 5

    - name: Debug the full token response
      debug:
        var: final_token.json

    - name: Extract the insecureNodeCommand
      set_fact:
        registration_cmd: "{{ final_token.json.insecureNodeCommand | trim }}"

    - name: Check if roles are missing and add them
      set_fact:
        final_registration_cmd: "{{ registration_cmd }} --etcd --controlplane --worker"
      when: "'--etcd' not in registration_cmd"

    - name: Use original command if roles are already included
      set_fact:
        final_registration_cmd: "{{ registration_cmd }}"
      when: "'--etcd' in registration_cmd"

    - name: Debug command length and content
      debug:
        msg:
          - "Original command length: {{ registration_cmd | length }}"
          - "Final command length: {{ final_registration_cmd | length }}"
          - "Contains --etcd: {{ '--etcd' in final_registration_cmd }}"
          - "Contains --controlplane: {{ '--controlplane' in final_registration_cmd }}"
          - "Contains --worker: {{ '--worker' in final_registration_cmd }}"

    - name: Create registration script file with roles
      copy:
        content: |
          #!/bin/bash
          # Registration script for cluster: {{ cluster_name }}
          # Generated automatically from Rancher API
          
          echo "Registering node with cluster: {{ cluster_name }}"
          echo "Cluster ID: {{ cluster_id }}"
          echo "Node roles: etcd, controlplane, worker"
          echo ""
          
          {{ final_registration_cmd }}
          
          exit_code=$?
          if [ $exit_code -eq 0 ]; then
            echo ""
            echo "‚úÖ Node registration completed successfully!"
          else
            echo ""
            echo "‚ùå Node registration failed with exit code: $exit_code"
          fi
        dest: "./register-{{ cluster_name }}.sh"
        mode: '0755'

    - name: Display the complete registration command
      debug:
        msg: |
          ‚úÖ COMPLETE REGISTRATION COMMAND GENERATED!
          ==========================================
          
          üîß REGISTRATION COMMAND:
          {{ final_registration_cmd }}
          
          üìè COMMAND LENGTH: {{ final_registration_cmd | length }} characters
          
          ‚úÖ INCLUDES NODE ROLES: 
          - etcd: {{ '--etcd' in final_registration_cmd }}
          - controlplane: {{ '--controlplane' in final_registration_cmd }} 
          - worker: {{ '--worker' in final_registration_cmd }}
          
          üìÅ Script created: ./register-{{ cluster_name }}.sh
          
          üöÄ Ready to use on your nodes!
