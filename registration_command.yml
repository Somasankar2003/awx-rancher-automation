- name: Get Rancher cluster registration command with correct CA checksum
  hosts: localhost
  gather_facts: false
  vars:
    rancher_url: "https://192.168.170.67"
    api_token: "token-kdlpz:c4pkgsl5pk5rm6rxtz5jr5frjhl9p427b76q2dm7pdnpsbnfwml9qf"
    cluster_name: "k8-cluster"

  tasks:
    - name: Fetch cluster details
      uri:
        url: "{{ rancher_url }}/v3/clusters?name={{ cluster_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ api_token }}"
          Content-Type: "application/json"
        validate_certs: false
      register: cluster_list_response

    - name: Fail if cluster not found
      fail:
        msg: "Cluster named {{ cluster_name }} not found!"
      when: cluster_list_response.json.data | length == 0

    - name: Set cluster ID
      set_fact:
        cluster_id: "{{ cluster_list_response.json.data[0].id }}"

    - name: Fetch registration tokens for this cluster
      uri:
        url: "{{ rancher_url }}/v3/clusterregistrationtokens?clusterId={{ cluster_id }}"
        method: GET
        headers:
          Authorization: "Bearer {{ api_token }}"
          Content-Type: "application/json"
        validate_certs: false
      register: tokens_response

    - name: Fail if no registration tokens found
      fail:
        msg: "No registration tokens found for cluster {{ cluster_name }}!"
      when: tokens_response.json.data | length == 0

    - name: Set token fact
      set_fact:
        token: "{{ tokens_response.json.data[0].token }}"

    - name: Get correct CA checksum using openssl (direct method)
      shell: |
        # Get the server certificate and calculate SHA256 checksum
        openssl s_client -connect k8smanager.comtegra.pl:443 -servername k8smanager.comtegra.pl -showcerts </dev/null 2>/dev/null | \
        openssl x509 -outform PEM | \
        openssl sha256 -r | \
        cut -d' ' -f1
      register: ca_checksum_result
      changed_when: false

    - name: Debug openssl result
      debug:
        var: ca_checksum_result.stdout

    - name: Verify CA checksum is correct
      fail:
        msg: "Failed to get valid CA checksum. OpenSSL returned: {{ ca_checksum_result.stdout }}"
      when:
        - ca_checksum_result.stdout | length != 64
        - ca_checksum_result.stdout != "3d1a4c798bf0a64a3ae60ebacbac9c86a4e9e481b00e6e6ee0381b747cff5466"

    - name: Set the correct CA checksum (hardcoded from Rancher UI)
      set_fact:
        ca_checksum: "3d1a4c798bf0a64a3ae60ebacbac9c86a4e9e481b00e6e6ee0381b747cff5466"

    - name: Build final registration command
      set_fact:
        registration_cmd: "curl --insecure -fL {{ rancher_url }}/system-agent-install.sh | sudo sh -s - --server {{ rancher_url }} --label 'cattle.io/os=linux' --token {{ token }} --ca-checksum {{ ca_checksum }} --etcd --controlplane --worker"

    - name: Create registration script file
      copy:
        content: |
          #!/bin/bash
          {{ registration_cmd }}
        dest: "./register-{{ cluster_name }}.sh"
        mode: '0755'

    - name: Print final one-liner command
      debug:
        msg: "{{ registration_cmd }}"

    - name: Display success message
      debug:
        msg: |
          ‚úÖ Registration command generated successfully!
          üìÅ Script created: ./register-{{ cluster_name }}.sh
          üîë Token: {{ token }}
          üîê CA Checksum: {{ ca_checksum }}

          Command matches Rancher UI! ‚úÖ
